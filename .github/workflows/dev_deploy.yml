name: Solution-friend Dev CI/CD

on:
  pull_request:
    types: [ closed ]
  workflow_dispatch: # (2).수동 실행도 가능하도록
env:
  # Java
  JAVA_VERSION: 8u171
  #DockerHub
  DOCKER_HUB_USERNAME: swlee1999
  # AWS & Elastic Bean Stalk
  AWS_REGION: ap-northeast-2
  EB_ENVIRONMENT_NAME: Hello-world-dev-env
  EB_APPLICATION_NAME: hello-world-dev
  EB_DEPLOYMENT_PACKAGE: elasticbeanstalk/docker-compose.yml
jobs:
  build:
    runs-on: ubuntu-latest # (3).OS환경
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # (4).코드 check out

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17 # (5).자바 설치
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # (6).권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # (7).build시작

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # (8).build시점의 시간확보

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash # (9).확보한 시간 보여주기

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions-dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{env.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}

      - name: Push to Dockerhub
        run: ./gradlew jib

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: ${{env.EB_APPLICATION_NAME}}
          environment_name: ${{env.EB_ENVIRONMENT_NAME}}
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_deployment: false